View(updatedSourceData[["E06000001"]][["stories"]])
library(tidyverse)
library(jsonlite)
sourceData <- fromJSON("../data/health.json")
subDomains <- fromJSON("../data/indlu.json")
subDomainToDomainLookup <- fromJSON("../data/domlu.json")
updatedSourceData <- lapply(sourceData, function(la) {
values2018 <- c()
for (subdomain in names(subDomains)) {
values2018 <- append(values2018, la[["data"]][[subDomainToDomainLookup[[subdomain]]]][["subdomains"]][[subdomain]][["total"]][["2018"]][["value"]])
}
values2018 <- data.frame(names(subDomains), values2018)
colnames(values2018) <- c("metric", "value2018")
storiedDFCopy <- la[["stories"]]
la[["stories"]] <- merge(x = storiesDFCopy, y = values2018, by = "metric", all.x = TRUE)
return(la)
})
library(tidyverse)
library(jsonlite)
sourceData <- fromJSON("../data/health.json")
subDomains <- fromJSON("../data/indlu.json")
subDomainToDomainLookup <- fromJSON("../data/domlu.json")
updatedSourceData <- lapply(sourceData, function(la) {
values2018 <- c()
for (subdomain in names(subDomains)) {
values2018 <- append(values2018, la[["data"]][[subDomainToDomainLookup[[subdomain]]]][["subdomains"]][[subdomain]][["total"]][["2018"]][["value"]])
}
values2018 <- data.frame(names(subDomains), values2018)
colnames(values2018) <- c("metric", "value2018")
storiesDFCopy <- la[["stories"]]
la[["stories"]] <- merge(x = storiesDFCopy, y = values2018, by = "metric", all.x = TRUE)
return(la)
})
View(updatedSourceData)
View(updatedSourceData[["E06000001"]][["stories"]])
aaa <- toJSON(updatedSourceData)
write(toJSON(updatedSourceData, "../data/healthWith2018Values.json"))
write(toJSON(updatedSourceData), "../data/healthWith2018Values.json")
write(toJSON(updatedSourceData, auto_unbox = TRUE), "../data/healthWith2018Values.json")
library(tidyverse)
library(jsonlite)
localAuthorityValueData <- fromJSON("../data/health.json")
subDomains <- fromJSON("../data/indlu.json")
subDomainToDomainLookup <- fromJSON("../data/domlu.json")
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
colnames(valuesDataFrame) <- c("la")
for (year in 2015:2019) {
for (subdomain in names(subDomains)) {
laData <- lapply(localAuthorityValueData, function(x) {
subdomainData <- x[["data"]][[subDomainToDomainLookup[[subdomain]]]][["subdomains"]][[subdomain]][["total"]][[as.character(year)]][["value"]]
})
valuesDataFrame[[paste0(subdomain,'_',year)]] <- laData
}
}
binnedValuesDataFrame <- as.data.frame(seq(from=50.5, to=150.5, by=1))
names(binnedValuesDataFrame) <- c('midpoint')
for (field in names(valuesDataFrame)) {
if (field != "la") {
minValue <- Reduce(min, valuesDataFrame[[field]]) - (Reduce(min, valuesDataFrame[[field]]) %% 1)
maxValue <- Reduce(max, valuesDataFrame[[field]]) - (Reduce(max, valuesDataFrame[[field]]) %% 1) + 1
breaks <- seq(from = minValue, to = maxValue, by = 1)
binnedData <- cut(x = as.numeric(valuesDataFrame[[field]]), breaks = breaks)
binnedData <- as.data.frame(as.vector(binnedData))
binnedData <- binnedData |>
group_by(`as.vector(binnedData)`) |>
summarise(count = n()) |>
mutate(midpoint = as.numeric(substr(`as.vector(binnedData)`,2,regexpr(",",`as.vector(binnedData)`)-1))+0.5)
colnames(binnedData) <- c('range', field, 'midpoint')
binnedValuesDataFrame <- merge(x = binnedValuesDataFrame, y = binnedData[c(field, 'midpoint')], by='midpoint', all.x = TRUE)
}
}
rm(laData, year, subdomain, minValue, maxValue, breaks, field, binnedData, valuesDataFrame)
binnedValuesDataFrame[is.na(binnedValuesDataFrame)] <- 0
#localAuthorityValueData <- fromJSON("../data/health.json")
#write.csv(data, "outputs.csv")
View(binnedValuesDataFrame)
library(tidyverse)
library(jsonlite)
localAuthorityValueData <- fromJSON("../data/health.json")
subDomains <- fromJSON("../data/indlu.json")
subDomainToDomainLookup <- fromJSON("../data/domlu.json")
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (subdomain in names(subDomains)) {
laData <- lapply(localAuthorityValueData, function(x) {
subdomainData <- x[["data"]][[subDomainToDomainLookup[[subdomain]]]][["subdomains"]][[subdomain]][["total"]][[as.character(year)]][["value"]]
})
#valuesDataFrame[[paste0(subdomain,'_',year)]] <- laData
aluesDataFrame[[paste0(subdomain)]] <- laData
}
}
library(tidyverse)
library(jsonlite)
localAuthorityValueData <- fromJSON("../data/health.json")
subDomains <- fromJSON("../data/indlu.json")
subDomainToDomainLookup <- fromJSON("../data/domlu.json")
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (subdomain in names(subDomains)) {
laData <- lapply(localAuthorityValueData, function(x) {
subdomainData <- x[["data"]][[subDomainToDomainLookup[[subdomain]]]][["subdomains"]][[subdomain]][["total"]][[as.character(year)]][["value"]]
})
#valuesDataFrame[[paste0(subdomain,'_',year)]] <- laData
valuesDataFrame[[paste0(subdomain)]] <- laData
}
}
binnedValuesDataFrame <- as.data.frame(seq(from=50.5, to=150.5, by=1))
names(binnedValuesDataFrame) <- c('midpoint')
for (field in names(valuesDataFrame)) {
if (field != "la") {
minValue <- Reduce(min, valuesDataFrame[[field]]) - (Reduce(min, valuesDataFrame[[field]]) %% 1)
maxValue <- Reduce(max, valuesDataFrame[[field]]) - (Reduce(max, valuesDataFrame[[field]]) %% 1) + 1
breaks <- seq(from = minValue, to = maxValue, by = 1)
binnedData <- cut(x = as.numeric(valuesDataFrame[[field]]), breaks = breaks)
binnedData <- as.data.frame(as.vector(binnedData))
binnedData <- binnedData |>
group_by(`as.vector(binnedData)`) |>
summarise(count = n()) |>
mutate(midpoint = as.numeric(substr(`as.vector(binnedData)`,2,regexpr(",",`as.vector(binnedData)`)-1))+0.5)
colnames(binnedData) <- c('range', field, 'midpoint')
binnedValuesDataFrame <- merge(x = binnedValuesDataFrame, y = binnedData[c(field, 'midpoint')], by='midpoint', all.x = TRUE)
}
}
rm(laData, year, subdomain, minValue, maxValue, breaks, field, binnedData, valuesDataFrame)
binnedValuesDataFrame[is.na(binnedValuesDataFrame)] <- 0
write.csv(binnedValuesDataFrame, ../data/binnedDistributions2019.csv)
View(binnedValuesDataFrame)
write.csv(binnedValuesDataFrame, "../data/binnedDistributions2019.csv")
write(toJSON(binnedValuesDataFrame, auto_unbox = TRUE), "../data/binnedDistributions2019.json")
localAuthorityValueData <- fromJSON("../data/health.json")
library(tidyverse)
library(jsonlite)
localAuthorityValueData <- fromJSON("../data/health.json")
localAuthorityValueData <- fromJSON("../data/indis.json")
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
View(valuesDataFrame)
indicators <- fromJSON("../data/indikey.json")
View(indicators)
names(indicators)
subDomainToDomainLookup <- fromJSON("../data/domlu.json")
View(subDomainToDomainLookup)
subDomainToDomainLookup <- fromJSON("../data/indlu.json")
View(subDomainToDomainLookup)
subDomainToDomainLookup[["Access to green space"]]
subDomainToDomainLookup <- unlist(subDomainToDomainLookup)
subDomainToDomainLookup <- fromJSON("../data/indlu.json")
View(subDomainToDomainLookup)
aaa <- stack(unlist(subDomainToDomainLookup))
View(aaa)
aaa <- stack(subDomainToDomainLookup)
View(aaa)
subDomainToDomainLookup <- stack(subDomainToDomainLookup)
localAuthorityValueData <- fromJSON("../data/health.json")
localAuthorityValueData <- fromJSON("../data/indis.json")
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
rm(aaa, subDomainToDomainLookup)
View(indicatorToSubDomainLookup)
View(indicatorToSubDomainLookup)
library(tidyverse)
library(jsonlite)
localAuthorityValueData <- fromJSON("../data/indis.json")
indicators <- fromJSON("../data/indikey.json")
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
for (year in 2019:2019) {
for (indicator in names(indicators)) {
laData <- lapply(localAuthorityValueData, function(x) {
indicatorData <- x[[filter(indicatorToSubDomainLookup, values == indicator)$ind]][[indictor]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (indicator in names(indicators)) {
laData <- lapply(localAuthorityValueData, function(x) {
indicatorData <- x[[filter(indicatorToSubDomainLookup, values == indicator)$ind]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
View(indicators)
print(filter(indicatorToSubDomainLookup, values == "Private outdoor space")$ind)
View(indicatorToSubDomainLookup)
print(filter(indicatorToSubDomainLookup, values == "Private outdoor space")[[ind]])
print(filter(indicatorToSubDomainLookup, values == "Private outdoor space")[["ind"]])
print(filter(indicatorToSubDomainLookup, values == "Private outdoor space")$ind[1])
print(filter(indicatorToSubDomainLookup, values == "Private outdoor space")$ind[[1]])
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- gather(stack(indicatorToSubDomainLookup), key = "values", value = "ind")
View(indicatorToSubDomainLookup)
library(tidyr)
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- gather(stack(indicatorToSubDomainLookup), key = "values", value = "ind")
View(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- tidyr::gather(stack(indicatorToSubDomainLookup), key = "values", value = "ind")
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- tidyr::gather(stack(indicatorToSubDomainLookup), key = "values", value = "ind")
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- setNames(as.list(indicatorToSubDomainLookup$values), indicatorToSubDomainLookup$ind)
View(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- setNames(as.list(indicatorToSubDomainLookup$ind), indicatorToSubDomainLookup$values)
View(indicatorToSubDomainLookup)
indicatorToSubDomainLookup[["Private outdoor space"]]
View(indicatorToSubDomainLookup)
indicatorToSubDomainLookup[["Private outdoor space"]]
indicatorToSubDomainLookup[["Private outdoor space"]][1]
indicatorToSubDomainLookup[["Private outdoor space"]][1][1]
indicatorToSubDomainLookup[["Private outdoor space"]][1][[1]]
indicatorToSubDomainLookup[["Private outdoor space"]][[1]][[1]]
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- setNames(as.list(indicatorToSubDomainLookup$ind), as.numeric(indicatorToSubDomainLookup$values))
View(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- setNames(as.list(indicatorToSubDomainLookup$ind), as.char(indicatorToSubDomainLookup$values))
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- setNames(as.list(indicatorToSubDomainLookup$ind), as.character(indicatorToSubDomainLookup$values))
View(indicatorToSubDomainLookup)
View(indicatorToSubDomainLookup)
indicatorToSubDomainLookup[["Private outdoor space"]]
indicatorToSubDomainLookup[["Private outdoor space"]]
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
View(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- mutate(indicatorToSubDomainLookup, ind = as.character(ind))
indicatorToSubDomainLookup <- setNames(as.list(indicatorToSubDomainLookup$ind), indicatorToSubDomainLookup$values)
View(indicatorToSubDomainLookup)
localAuthorityValueData <- fromJSON("../data/indis.json")
indicators <- fromJSON("../data/indikey.json")
indicatorToSubDomainLookup <- fromJSON("../data/indlu.json")
indicatorToSubDomainLookup <- stack(indicatorToSubDomainLookup)
indicatorToSubDomainLookup <- mutate(indicatorToSubDomainLookup, ind = as.character(ind))
indicatorToSubDomainLookup <- setNames(as.list(indicatorToSubDomainLookup$ind), indicatorToSubDomainLookup$values)
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (indicator in names(indicators)) {
laData <- lapply(localAuthorityValueData, function(x) {
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
indicatorToSubDomainLookup["Private outdoor space"]
indicatorToSubDomainLookup["Private outdoor space"][1]
for (year in 2019:2019) {
for (indicator in names(indicators)) {
laData <- lapply(localAuthorityValueData, function(x) {
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
for (year in 2019:2019) {
for (indicator in names(indicators)) {
laData <- lapply(localAuthorityValueData, function(x) {
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
localAuthorityValueData[["E06000001"]]
a <- localAuthorityValueData[["E06000001"]]
View(a)
a <- localAuthorityValueData[["E06000001"]][[indicatorToSubDomainLookup[["Road safety"]]]]
View(a)
for (year in 2019:2019) {
for (indicator in names(indicators)) {
laData <- lapply(localAuthorityValueData, function(x) {
print(indicator)
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
View(indicators)
View(localAuthorityValueData)
View(indicators)
View(indicatorToSubDomainLookup)
View(indicators)
View(indicatorToSubDomainLookup)
indicators <- indicators[x != "Hypertension"];
indicators <- indicators[indicators != "Hypertension"];
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (indicator in names(indicators)) {
laData <- lapply(localAuthorityValueData, function(x) {
print(indicator)
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
View(localAuthorityValueData)
indicators <- indicators[!indicators %in% c("Hypertension", "Children's social, emotional and mental heath")];
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (indicator in names(indicators)) {
laData <- lapply(localAuthorityValueData, function(x) {
print(indicator)
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
indicators <- indicators[!indicators %in% c("Hypertension", "Children's social, emotional and mental heath")];
indicators <- indicators[indicators %in% c("Hypertension", "Children's social, emotional and mental heath")];
indicators <- indicators[!indicators != "Children's social, emotional and mental heath"];
indicators <- fromJSON("../data/indikey.json")
indicators <- indicators[!indicators != "Hypertension"]
indicators <- indicators[!indicators != "Children's social, emotional and mental heath"]
indicators <- fromJSON("../data/indikey.json")
indicators <- indicators[indicators != "Hypertension"]
indicators <- indicators[indicators != "Children's social, emotional and mental heath"]
View(indicators)
indicators[["Children's social, emotional and mental heath"]]
indicators <- indicators[indicators != "Children\s social, emotional and mental heath"]
indicators <- indicators[indicators != "Children's social, emotional and mental heath"]
View(indicators)
View(indicators)
indicators[["Children's social, emotional and mental heath"]]
indicators <- indicators[indicators != "Children's social, emotional and mental heath"]
indicators <- indicators[indicators != "Children\'s social, emotional and mental heath"]
indicators <- indicators[indicators != "Children\s social, emotional and mental heath"]
View(indicators)
indicators <- indicators[indicators != "Children\'s social, emotional and mental heath"]
indicators <- indicators[indicators != "Children\\'s social, emotional and mental heath"]
print(indicators)
indicators <- indicators[indicators != "Children's social, emotional and mental health"]
View(indicators)
for (year in 2019:2019) {
for (indicator in names(indicators)) {
laData <- lapply(localAuthorityValueData, function(x) {
print(indicator)
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
View(indicatorToSubDomainLookup)
View(indicatorToSubDomainLookup)
indicators <- indicators[indicators != "Hip fractures"]
indicators <- indicators[indicators != "Hip fractures"]
View(indicators)
View(indicatorToSubDomainLookup)
indicators <- fromJSON("../data/indikey.json")
View(indicators)
View(localAuthorityValueData)
for (key in localAuthorityValueData[["E06000001"]]) {
for (subKey in localAuthorityValueData[["E06000001"]][[key]])
print(subKey)
}
View(localAuthorityValueData)
for (key in names(localAuthorityValueData[["E06000001"]])) {
for (subKey in names(localAuthorityValueData[["E06000001"]][[key]])) {
print(subKey)
}
}
indicatorsToSubDomainLookup <- c()
for (key in names(localAuthorityValueData[["E06000001"]])) {
for (subKey in names(localAuthorityValueData[["E06000001"]][[key]])) {
indicatorToSubDomainLookup[[subKey]] <- key
}
}
View(indicatorToSubDomainLookup)
localAuthorityValueData <- fromJSON("../data/indis.json")
indicatorsToSubDomainLookup <- c()
for (key in names(localAuthorityValueData[["E06000001"]])) {
for (subKey in names(localAuthorityValueData[["E06000001"]][[key]])) {
indicatorToSubDomainLookup[[subKey]] <- key
}
}
localAuthorityValueData <- fromJSON("../data/indis.json")
indicatorsToSubDomainLookup <- c()
for (key in names(localAuthorityValueData[["E06000001"]])) {
for (subKey in names(localAuthorityValueData[["E06000001"]][[key]])) {
indicatorsToSubDomainLookup[[subKey]] <- key
}
}
View(indicatorsToSubDomainLookup)
colnames(valuesDataFrame) <- c("la")
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (indicator in names(indicatorsToSubDomainLookup)) {
laData <- lapply(localAuthorityValueData, function(x) {
print(indicator)
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
localAuthorityValueData <- fromJSON("../data/indis.json")
indicatorToSubDomainLookup <- c()
for (key in names(localAuthorityValueData[["E06000001"]])) {
for (subKey in names(localAuthorityValueData[["E06000001"]][[key]])) {
indicatorToSubDomainLookup[[subKey]] <- key
}
}
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (indicator in names(indicatorToSubDomainLookup)) {
laData <- lapply(localAuthorityValueData, function(x) {
print(indicator)
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
View(valuesDataFrame)
View(valuesDataFrame)
View(valuesDataFrame)
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (indicator in names(indicatorToSubDomainLookup)) {
laData <- lapply(localAuthorityValueData, function(x) {
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
library(tidyverse)
library(jsonlite)
localAuthorityValueData <- fromJSON("../data/indis.json")
indicatorToSubDomainLookup <- c()
for (key in names(localAuthorityValueData[["E06000001"]])) {
for (subKey in names(localAuthorityValueData[["E06000001"]][[key]])) {
indicatorToSubDomainLookup[[subKey]] <- key
}
}
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (indicator in names(indicatorToSubDomainLookup)) {
laData <- lapply(localAuthorityValueData, function(x) {
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
valuesDataFrame[[paste0(indicator)]] <- laData
}
}
View(valuesDataFrame)
valuesDataFrame <- as.data.frame(names(localAuthorityValueData))
colnames(valuesDataFrame) <- c("la")
for (year in 2019:2019) {
for (indicator in names(indicatorToSubDomainLookup)) {
laData <- lapply(localAuthorityValueData, function(x) {
indicatorData <- x[[indicatorToSubDomainLookup[[indicator]]]][[indicator]][[as.character(year)]]
})
valuesDataFrame[[paste0(indicator,'_',year)]] <- laData
}
}
View(valuesDataFrame)
min(valuesDataFrame)
aaa <- valuesDataFrame
aaa$la <- NULL
min(aaa)
View(aaa)
min(aaa)
min(aaa$Disability_2019)
apply(aaa,2,min)
View(valuesDataFrame)
binnedValuesDataFrame <- as.data.frame(seq(from=50.5, to=150.5, by=1))
names(binnedValuesDataFrame) <- c('midpoint')
for (field in names(valuesDataFrame)) {
if (field != "la") {
minValue <- Reduce(min, valuesDataFrame[[field]]) - (Reduce(min, valuesDataFrame[[field]]) %% 1)
maxValue <- Reduce(max, valuesDataFrame[[field]]) - (Reduce(max, valuesDataFrame[[field]]) %% 1) + 1
breaks <- seq(from = minValue, to = maxValue, by = 1)
binnedData <- cut(x = as.numeric(valuesDataFrame[[field]]), breaks = breaks)
binnedData <- as.data.frame(as.vector(binnedData))
binnedData <- binnedData |>
group_by(`as.vector(binnedData)`) |>
summarise(count = n()) |>
mutate(midpoint = as.numeric(substr(`as.vector(binnedData)`,2,regexpr(",",`as.vector(binnedData)`)-1))+0.5)
colnames(binnedData) <- c('range', field, 'midpoint')
binnedValuesDataFrame <- merge(x = binnedValuesDataFrame, y = binnedData[c(field, 'midpoint')], by='midpoint', all.x = TRUE)
}
}
View(binnedValuesDataFrame)
rm(laData, year, subdomain, minValue, maxValue, breaks, field, binnedData, valuesDataFrame)
binnedValuesDataFrame[is.na(binnedValuesDataFrame)] <- 0
write.csv(binnedValuesDataFrame, "../data/binnedIndicatorDistributions2019.csv")
write(toJSON(binnedValuesDataFrame, auto_unbox = TRUE), "../data/binnedIndicatorDistributions2019.json")
